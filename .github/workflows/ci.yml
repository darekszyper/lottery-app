# .github/workflows/ci.yml
name: Deploy and Manage Infrastructure

on:
  workflow_dispatch:
    inputs:
      destroy:
        description: "If you want to destroy AWS DB and Heroku app type 'true'"
        required: false
        default: "false"

jobs:
  setup-rds:
    if: ${{ github.event.inputs.destroy != 'true' }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Initialize Terraform
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Apply Terraform
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}"

  deploy-heroku:
    if: ${{ github.event.inputs.destroy != 'true' }}
    runs-on: ubuntu-22.04
    needs: setup-rds
    steps:
      - uses: actions/checkout@v2

      - name: Initialize Terraform for Heroku Deploy
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Retrieve DB URL from Terraform Output (Heroku)
        working-directory: ./terraform
        id: terraform_output
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          DB_URL=$(terraform output -raw db_url)
          echo "DB_URL=$DB_URL"
          echo "::set-output name=DB_URL::$DB_URL"

      # Debug step to print environment variables
      - name: Print Environment Variables (Debug)
        run: |
          echo DB_URL=${{ steps.terraform_output.outputs.DB_URL }}
          echo HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          echo HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          echo DATA_SOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          echo DATA_SOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          echo MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          echo MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          echo ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          echo RANDOM_API_KEY: ${{ secrets.RANDOM_API_KEY }}
          echo USER1_PASSWORD: ${{ secrets.USER1_PASSWORD }}
          echo USER2_PASSWORD: ${{ secrets.USER2_PASSWORD }}

      - uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}} # Must be unique in Heroku
          heroku_email: ${{secrets.MY_EMAIL}}
        env:
          HD_DATA_SOURCE_URL: ${{ steps.terraform_output.outputs.DB_URL }}
          HD_HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HD_HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HD_DATA_SOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          HD_DATA_SOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          HD_MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          HD_MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          HD_ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          HD_RANDOM_API_KEY: ${{ secrets.RANDOM_API_KEY }}
          HD_USER1_PASSWORD: ${{ secrets.USER1_PASSWORD }}
          HD_USER2_PASSWORD: ${{ secrets.USER2_PASSWORD }}

  destroy:
    if: ${{ github.event.inputs.destroy == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Destroy RDS
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init  # Ensure initialization before destroy
          terraform destroy -auto-approve \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}"

      - name: Delete Heroku App
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: heroku apps:destroy --app $HEROKU_APP_NAME --confirm $HEROKU_APP_NAME